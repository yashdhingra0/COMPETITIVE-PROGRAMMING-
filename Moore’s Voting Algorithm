


class Solution {
public:
    int majorityElement(vector<int>& nums) {
        //by moore voting algo
        int val=nums[0];
        int count=1;
        for(int i=1;i<nums.size();i++){
            if(nums[i]==val){
                count++;
            }
            else{
                if(count>0){
                    count--;
                }
                else{
                    val=nums[i];
                    count=1;
                }
            }
           
            
        }
         return val;}
};

///////////////////////////////////////////////////////////////////////////////////////////


#include<bits/stdc++.h>
using namespace std;

int ans(int a[],int n){
    int m_index=1;
    int count=1;
    for(int i=1;i<n;i++){
        if(a[i]==a[m_index]){
        count++;}
        else{
            count--;
        }
        if(count==0){
            m_index=i;
            count=1;
        }
    }
    return a[m_index];
}

bool issafe(int ans,int a[],int n){
    int count=0;
    for(int i=0;i<n;i++){
        if(a[i]==ans){
            count++;
        }}
        if(count>n/2){
            return 1;
        }
        else{
            return 0;
        }
    
}

void p(int a[], int n) 
{ 
   /* Find the candidate for Majority*/
   int cand = ans(a, n); 
  
   /* Print the candidate if it is Majority*/
   if (issafe( cand,a ,n)) 
   cout << " " << cand << " "; 
     
   else
   cout << "No Majority Element"; 
} 
int main(){
    int a[]{1,3,3,5,9};
    int n=5;
    p(a,n);
    return 0;
}
