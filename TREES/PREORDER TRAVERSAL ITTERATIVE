Recursive solution

class Solution {
public:
    vector<int> ans;
    
    vector<int> preorderTraversal(TreeNode* root) {
        if(root==NULL) 
            return {};
        
        ans.push_back(root->val);
        preorderTraversal(root->left);
        preorderTraversal(root->right);
        
        return ans;
    }
};



||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Iterative solution

class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) 
    {
        vector<int> ans;
        stack<TreeNode*> st;
        
        while(1) {
            while(root) {
                ans.push_back(root->val); 
                st.push(root);
                root= root->left;  
            }
            if(st.empty())
                break;
            
            root= st.top()->right;
            st.pop();
        }
        
        return ans;
    }
};

