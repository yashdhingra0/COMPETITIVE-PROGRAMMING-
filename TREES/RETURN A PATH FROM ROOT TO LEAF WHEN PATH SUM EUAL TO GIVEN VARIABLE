   For example:
Given the below binary tree and sum = 22,

              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1

return

[
   [5,4,11,2],
   [5,8,4,5]
]

 
    
    
    void build(TreeNode* A, int B, vector<vector<int>> &ans, vector<int> curr)
    {
        if(!A) return;
        curr.push_back(A->val);
        B -= A->val;
        if(!A->left && !A->right)
        {
            if(B == 0) 
            {
                ans.push_back(curr);
            }
            return;
        }
        if(A->left) build(A->left, B,ans,curr);
        if(A->right) build(A->right, B,ans,curr);
    }
    vector<vector<int> > Solution::pathSum(TreeNode* A, int B) {
        vector<vector<int>> ans;
        build(A,B,ans,{});
        return ans;
    }
