// C++ program for activity selection problem. 
// The following implementation assumes that the activities 
// are already sorted according to their finish time 
#include<bits/stdc++.h> 
using namespace std;

void printMaxActivities(int s[], int f[], int n) 
{ 
    // here we assume that finishing timing given array is sorted bt default otherwise we have to sort to use greedy approach
	int i, j; 
     printf ("Following activities are selected n"); 
    i = 0; 
	printf("%d ", i); 

	
	for (j = 1; j < n; j++) 
	{ 
	
	if (s[j] >= f[i]) // if starting time of next activity is greater than or equal to finishing time of previous selected activity  
	{ 
		printf ("%d ", j); 
		i = j; 
	} 
	} 
} 

// driver program to test above function 
int main() 
{ 
	int s[] = {1, 3, 0, 5, 8, 5}; 
	int f[] = {2, 4, 6, 7, 9, 9}; 
	int n = sizeof(s)/sizeof(s[0]); 
	printMaxActivities(s, f, n); 
	return 0; 
} 

output 0 1 3 4
