Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.

Example 1:

Input: nums = [1,2,3,1], k = 3, t = 0
Output: true




solution

#define ll long long
##code by yash dhingra
class Solution {
public:
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {
        int n=nums.size();
        vector<pair<ll,int>>v;
        for(int i=0;i<n;i++){
            v.push_back({nums[i],i});
        } 
        sort(v.begin(),v.end());
        int i=0;
        int j=1;
        while(j<n){
            if(v[j].first-v[i].first>t && v[j].second!=v[i].second){
                i++;
                continue;
            }
            if(i==j || abs(v[i].second-v[j].second)>k)
                j++;
            else
                return true;
        }
        return false;
        
        
    }
};
