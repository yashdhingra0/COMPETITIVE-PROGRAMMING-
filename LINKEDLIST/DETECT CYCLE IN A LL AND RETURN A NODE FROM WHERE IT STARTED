/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::detectCycle(ListNode* A) {  
    bool loop= false;
    ListNode *slow = A ;
    ListNode *fast = A ; 
    while(slow && fast && fast->next){
        slow = slow->next ;
        
        fast = fast->next->next ; 
        if(slow==fast){
            loop = true ; 
            break;
            //cout<<true ;
        } 
        
    }  
    if(loop){ 
       slow = A ;
       while(slow!=fast){
           slow = slow->next ;
           fast = fast->next;
       } 
       return slow; 
    }
    return NULL;
